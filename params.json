{"name":"HN whoishiring Python library.","tagline":"Library for scraping job posts from hacker news","body":"Library for grabbing job listings from hacker news.\r\n===================================================\r\n[![Build Status](https://travis-ci.org/joshz/whoishiring.png)](https://travis-ci.org/joshz/whoishiring)\r\n\r\nUsage\r\n-----\r\n\r\n### whoishiring listing\r\nGet all [user whoishiring](https://news.ycombinator.com/submitted?id=whoishiring)'s submissions\r\n```\r\nIn [1]: from whoishiring.lib import whlisting\r\n\r\nIn [2]: bydate = whlisting.WHListing()\r\n```\r\n\r\n`WHListing` is a class that behaves like collections.OrderedDict. It holds all the posts submitted by whoishiring.\r\n\r\nYou can index an instance of that class by date of the first day of a month\r\n```\r\nIn [3]: from datetime import date\r\n\r\nIn [4]: bydate[date(2013, 7, 1)]\r\nOut[4]:\r\n[HNListingItem(title='Ask HN: Freelancer? Seeking freelancer? (July 2013)', permanent=False, url='item?id=5970190', date=datetime.date(2013, 7, 1)),\r\n HNListingItem(title='Ask HN: Who is hiring? (July 2013)', permanent=True, url='item?id=5970187', date=datetime.date(2013, 7, 1))]\r\n```\r\nand you'll receive a list of named tuples containing title, url, date and whether it's a perm or freelance listing for that date.\r\n\r\nIf you're only interested in the latest postings do\r\n```\r\nIn [7]: bydate.latest\r\nOut[7]:\r\n[HNListingItem(title='Ask HN: Freelancer? Seeking freelancer? (September 2013)', permanent=False, url='item?id=6310240', date=datetime.date(2013, 9, 1)),\r\n HNListingItem(title='Ask HN: Who is hiring? (September 2013)', permanent=True, url='item?id=6310234', date=datetime.date(2013, 9, 1))]\r\n```\r\n\r\nOr if you're interested only in latest freelance postings\r\n```\r\nIn [6]: bydate.latest.freelance\r\nOut[6]: HNListingItem(title='Ask HN: Freelancer? Seeking freelancer? (September 2013)', permanent='freelance', url='item?id=6310240', date=datetime.date(2013, 9, 1))\r\n```\r\n\r\nSimilarly, you can get permanent postings from January 2013 like this\r\n```\r\nIn [8]: d=date(2013, 1, 1)\r\nIn [9]: bydate[d].permanent\r\nOut[9]: HNListingItem(title='Ask HN: Who is hiring? (January 2013)', permanent='permanent', url='item?id=4992617', date=datetime.date(2013, 1, 1))\r\n\r\n```\r\n\r\n### Job listings for particular date\r\nYou can ask for jobs from specific date by passing `HNListingItem` from WHListing. Really you need a named tuple that has a date. Job listing is iterable. Each index holds a dictionary with information about the comment:\r\n* html\r\n* text\r\n* url\r\n* author\r\n* date\r\n* permanent <- this is a string, not a boolean like in the HNListingItem\r\n* parent_thread\r\n\r\n```\r\nIn [12]: j = joblisting.JobListing(l.latest.permanent)\r\n\r\nIn [12]: j.date\r\nOut[12]: datetime.date(2013, 9, 1)\r\n\r\nIn [11]: for v in j:\r\n   ....:     print v['author']\r\n   ....:\r\nuser?id=author1\r\nuser?id=author2\r\nuser?id=author3\r\nuser?id=author4\r\nuser?id=author5\r\n...\r\n\r\nIn [13]: len(j)\r\nOut[13]: 369\r\n```\r\n\r\nYou can further process the text with [hniextract](https://github.com/joshz/hniextract).\r\n","google":"UA-46399171-2","note":"Don't delete this file! It's used internally to help with page regeneration."}